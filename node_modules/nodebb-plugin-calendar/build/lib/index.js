'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.postDelete = exports.composerFormatting = exports.postEdit = exports.privilegesListHuman = exports.privilegesGroupsList = exports.privilegesList = exports.postSave = exports.parseRaw = exports.parsePost = exports.adminMenu = exports.addNavigation = exports.init = undefined;

require('core-js/shim');

var _init = require('./init');

var _init2 = _interopRequireDefault(_init);

var _parseFilters = require('./parseFilters');

var _postSave = require('./postSave');

var _privileges = require('./privileges');

var _event = require('./event');

require('./sockets');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: repeating events

const addNavigation = (navs, callback) => {
  navs.push({
    route: '/calendar',
    title: '\\[\\[calendar:calendar\\]\\]',
    iconClass: 'fa-calendar',
    textClass: 'visible-xs-inline',
    text: '\\[\\[calendar:calendar\\]\\]'
  });
  callback(null, navs);
}; // Polyfills

const adminMenu = (header, callback) => {
  header.plugins.push({
    route: '/plugins/calendar',
    icon: 'fa-calendar',
    name: 'Calendar'
  });
  callback(null, header);
};

const composerFormatting = (data, callback) => {
  data.options.push({
    name: 'plugin-calendar-event',
    className: 'fa fa-calendar-o plugin-calendar-composer-edit-event',
    title: '[[calendar:edit_event]]'
  });
  callback(null, data);
};

const postDelete = (pid, cb) => (0, _event.deleteEvent)(pid).asCallback(cb);

exports.init = _init2.default;
exports.addNavigation = addNavigation;
exports.adminMenu = adminMenu;
exports.parsePost = _parseFilters.parsePostCallback;
exports.parseRaw = _parseFilters.parseRawCallback;
exports.postSave = _postSave.postSaveCallback;
exports.privilegesList = _privileges.privilegesList;
exports.privilegesGroupsList = _privileges.privilegesGroupsList;
exports.privilegesListHuman = _privileges.privilegesListHuman;
exports.postEdit = _postSave.postEditCallback;
exports.composerFormatting = composerFormatting;
exports.postDelete = postDelete;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUVBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQUlBLE1BQU0sZ0JBQWdCLENBQUMsSUFBRCxFQUFPLFFBQVAsS0FBb0I7QUFDeEMsT0FBSyxJQUFMLENBQVU7QUFDUixXQUFPLFdBREM7QUFFUixXQUFPLCtCQUZDO0FBR1IsZUFBVyxhQUhIO0FBSVIsZUFBVyxtQkFKSDtBQUtSLFVBQU07QUFMRSxHQUFWO0FBT0EsV0FBUyxJQUFULEVBQWUsSUFBZjtBQUNELENBVEQsQzs7QUFVQSxNQUFNLFlBQVksQ0FBQyxNQUFELEVBQVMsUUFBVCxLQUFzQjtBQUN0QyxTQUFPLE9BQVAsQ0FBZSxJQUFmLENBQW9CO0FBQ2xCLFdBQU8sbUJBRFc7QUFFbEIsVUFBTSxhQUZZO0FBR2xCLFVBQU07QUFIWSxHQUFwQjtBQUtBLFdBQVMsSUFBVCxFQUFlLE1BQWY7QUFDRCxDQVBEOztBQVNBLE1BQU0scUJBQXFCLENBQUMsSUFBRCxFQUFPLFFBQVAsS0FBb0I7QUFDN0MsT0FBSyxPQUFMLENBQWEsSUFBYixDQUFrQjtBQUNoQixVQUFNLHVCQURVO0FBRWhCLGVBQVcsc0RBRks7QUFHaEIsV0FBTztBQUhTLEdBQWxCO0FBS0EsV0FBUyxJQUFULEVBQWUsSUFBZjtBQUNELENBUEQ7O0FBU0EsTUFBTSxhQUFhLENBQUMsR0FBRCxFQUFNLEVBQU4sS0FBYSx3QkFBWSxHQUFaLEVBQWlCLFVBQWpCLENBQTRCLEVBQTVCLENBQWhDOztRQUdFLEk7UUFDQSxhLEdBQUEsYTtRQUNBLFMsR0FBQSxTO1FBQ3FCLFM7UUFDRCxRO1FBQ0EsUTtRQUNwQixjO1FBQ0Esb0I7UUFDQSxtQjtRQUNvQixRO1FBQ3BCLGtCLEdBQUEsa0I7UUFDQSxVLEdBQUEsVSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFBvbHlmaWxsc1xuaW1wb3J0ICdjb3JlLWpzL3NoaW0nO1xuXG5pbXBvcnQgaW5pdCBmcm9tICcuL2luaXQnO1xuaW1wb3J0IHsgcGFyc2VQb3N0Q2FsbGJhY2ssIHBhcnNlUmF3Q2FsbGJhY2sgfSBmcm9tICcuL3BhcnNlRmlsdGVycyc7XG5pbXBvcnQgeyBwb3N0U2F2ZUNhbGxiYWNrLCBwb3N0RWRpdENhbGxiYWNrIH0gZnJvbSAnLi9wb3N0U2F2ZSc7XG5pbXBvcnQgeyBwcml2aWxlZ2VzTGlzdCwgcHJpdmlsZWdlc0dyb3Vwc0xpc3QsIHByaXZpbGVnZXNMaXN0SHVtYW4gfSBmcm9tICcuL3ByaXZpbGVnZXMnO1xuaW1wb3J0IHsgZGVsZXRlRXZlbnQgfSBmcm9tICcuL2V2ZW50JztcbmltcG9ydCAnLi9zb2NrZXRzJztcblxuLy8gVE9ETzogcmVwZWF0aW5nIGV2ZW50c1xuXG5jb25zdCBhZGROYXZpZ2F0aW9uID0gKG5hdnMsIGNhbGxiYWNrKSA9PiB7XG4gIG5hdnMucHVzaCh7XG4gICAgcm91dGU6ICcvY2FsZW5kYXInLFxuICAgIHRpdGxlOiAnXFxcXFtcXFxcW2NhbGVuZGFyOmNhbGVuZGFyXFxcXF1cXFxcXScsXG4gICAgaWNvbkNsYXNzOiAnZmEtY2FsZW5kYXInLFxuICAgIHRleHRDbGFzczogJ3Zpc2libGUteHMtaW5saW5lJyxcbiAgICB0ZXh0OiAnXFxcXFtcXFxcW2NhbGVuZGFyOmNhbGVuZGFyXFxcXF1cXFxcXScsXG4gIH0pO1xuICBjYWxsYmFjayhudWxsLCBuYXZzKTtcbn07XG5jb25zdCBhZG1pbk1lbnUgPSAoaGVhZGVyLCBjYWxsYmFjaykgPT4ge1xuICBoZWFkZXIucGx1Z2lucy5wdXNoKHtcbiAgICByb3V0ZTogJy9wbHVnaW5zL2NhbGVuZGFyJyxcbiAgICBpY29uOiAnZmEtY2FsZW5kYXInLFxuICAgIG5hbWU6ICdDYWxlbmRhcicsXG4gIH0pO1xuICBjYWxsYmFjayhudWxsLCBoZWFkZXIpO1xufTtcblxuY29uc3QgY29tcG9zZXJGb3JtYXR0aW5nID0gKGRhdGEsIGNhbGxiYWNrKSA9PiB7XG4gIGRhdGEub3B0aW9ucy5wdXNoKHtcbiAgICBuYW1lOiAncGx1Z2luLWNhbGVuZGFyLWV2ZW50JyxcbiAgICBjbGFzc05hbWU6ICdmYSBmYS1jYWxlbmRhci1vIHBsdWdpbi1jYWxlbmRhci1jb21wb3Nlci1lZGl0LWV2ZW50JyxcbiAgICB0aXRsZTogJ1tbY2FsZW5kYXI6ZWRpdF9ldmVudF1dJyxcbiAgfSk7XG4gIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xufTtcblxuY29uc3QgcG9zdERlbGV0ZSA9IChwaWQsIGNiKSA9PiBkZWxldGVFdmVudChwaWQpLmFzQ2FsbGJhY2soY2IpO1xuXG5leHBvcnQge1xuICBpbml0LFxuICBhZGROYXZpZ2F0aW9uLFxuICBhZG1pbk1lbnUsXG4gIHBhcnNlUG9zdENhbGxiYWNrIGFzIHBhcnNlUG9zdCxcbiAgcGFyc2VSYXdDYWxsYmFjayBhcyBwYXJzZVJhdyxcbiAgcG9zdFNhdmVDYWxsYmFjayBhcyBwb3N0U2F2ZSxcbiAgcHJpdmlsZWdlc0xpc3QsXG4gIHByaXZpbGVnZXNHcm91cHNMaXN0LFxuICBwcml2aWxlZ2VzTGlzdEh1bWFuLFxuICBwb3N0RWRpdENhbGxiYWNrIGFzIHBvc3RFZGl0LFxuICBjb21wb3NlckZvcm1hdHRpbmcsXG4gIHBvc3REZWxldGUsXG59O1xuIl19