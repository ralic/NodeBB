'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _controllers = require('./controllers');

var _controllers2 = _interopRequireDefault(_controllers);

var _reminders = require('./reminders');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = require.main.require('./src/meta');

const p = _bluebird2.default.promisify;

const getSettings = p(meta.settings.get);
const setSettings = p(meta.settings.set);

exports.default = ({ router, middleware }, callback) => {
  (0, _controllers2.default)(router, middleware);

  const defaults = {
    checkingInterval: 1000 * 60 * 5
  };

  getSettings('plugin-calendar').then(settings => setSettings('plugin-calendar', _extends({}, defaults, settings))).then(() => (0, _reminders.initNotifierDaemon)()).asCallback(callback);

  // TODO: configuration
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvaW5pdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBOzs7O0FBS0E7Ozs7QUFDQTs7OztBQVJBLE1BQU0sT0FBTyxRQUFRLElBQVIsQ0FBYSxPQUFiLENBQXFCLFlBQXJCLENBQWI7O0FBR0EsTUFBTSxJQUFJLG1CQUFRLFNBQWxCOztBQUVBLE1BQU0sY0FBYyxFQUFFLEtBQUssUUFBTCxDQUFjLEdBQWhCLENBQXBCO0FBQ0EsTUFBTSxjQUFjLEVBQUUsS0FBSyxRQUFMLENBQWMsR0FBaEIsQ0FBcEI7O2tCQUllLENBQUMsRUFBRSxNQUFGLEVBQVUsVUFBVixFQUFELEVBQXlCLFFBQXpCLEtBQXNDO0FBQ25ELDZCQUFZLE1BQVosRUFBb0IsVUFBcEI7O0FBRUEsUUFBTSxXQUFXO0FBQ2Ysc0JBQWtCLE9BQU8sRUFBUCxHQUFZO0FBRGYsR0FBakI7O0FBSUEsY0FBWSxpQkFBWixFQUErQixJQUEvQixDQUFvQyxZQUNsQyxZQUFZLGlCQUFaLGVBQW9DLFFBQXBDLEVBQWlELFFBQWpELEVBREYsRUFHQyxJQUhELENBR00sTUFBTSxvQ0FIWixFQUlDLFVBSkQsQ0FJWSxRQUpaOzs7QUFPRCxDIiwiZmlsZSI6ImluaXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtZXRhID0gcmVxdWlyZS5tYWluLnJlcXVpcmUoJy4vc3JjL21ldGEnKTtcclxuXHJcbmltcG9ydCBQcm9taXNlIGZyb20gJ2JsdWViaXJkJztcclxuY29uc3QgcCA9IFByb21pc2UucHJvbWlzaWZ5O1xyXG5cclxuY29uc3QgZ2V0U2V0dGluZ3MgPSBwKG1ldGEuc2V0dGluZ3MuZ2V0KTtcclxuY29uc3Qgc2V0U2V0dGluZ3MgPSBwKG1ldGEuc2V0dGluZ3Muc2V0KTtcclxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4vY29udHJvbGxlcnMnO1xyXG5pbXBvcnQgeyBpbml0Tm90aWZpZXJEYWVtb24gfSBmcm9tICcuL3JlbWluZGVycyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCAoeyByb3V0ZXIsIG1pZGRsZXdhcmUgfSwgY2FsbGJhY2spID0+IHtcclxuICBjb250cm9sbGVycyhyb3V0ZXIsIG1pZGRsZXdhcmUpO1xyXG5cclxuICBjb25zdCBkZWZhdWx0cyA9IHtcclxuICAgIGNoZWNraW5nSW50ZXJ2YWw6IDEwMDAgKiA2MCAqIDUsXHJcbiAgfTtcclxuXHJcbiAgZ2V0U2V0dGluZ3MoJ3BsdWdpbi1jYWxlbmRhcicpLnRoZW4oc2V0dGluZ3MgPT5cclxuICAgIHNldFNldHRpbmdzKCdwbHVnaW4tY2FsZW5kYXInLCB7IC4uLmRlZmF1bHRzLCAuLi5zZXR0aW5ncyB9KVxyXG4gIClcclxuICAudGhlbigoKSA9PiBpbml0Tm90aWZpZXJEYWVtb24oKSlcclxuICAuYXNDYWxsYmFjayhjYWxsYmFjayk7XHJcblxyXG4gIC8vIFRPRE86IGNvbmZpZ3VyYXRpb25cclxufTtcclxuIl19