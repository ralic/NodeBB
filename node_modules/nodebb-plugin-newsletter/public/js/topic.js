'use strict';

/* global socket, config, ajaxify, app */

$(function () {
  //$(window).on('action:topic.tools.load', addHandlers)

  $(window).on('action:composer.loaded', function (err, data) {
    if (data.hasOwnProperty('composerData') && !data.composerData.isMain) {
      // Do nothing, as this is a reply, not a new post
      return;
    }

    if (!app.user.isAdmin) return;

    var item = $('<li><a href="#"><i class="fa fa-fw fa-newspaper-o"></i> Send as Newsletter</a></li>');
    var dropdownEl = $('#cmp-uuid-' + data.post_uuid + ' .action-bar .dropdown-menu');

    var groupsHtml = '';

    socket.emit('admin.Newsletter.getGroupsList', {}, function (err, data) {
      if (err) return console.log('getGroupsList socket err: ' + err.message);
      groupsHtml = data.html;
    });

    if (config['newsletter']) {
      // TODO
    }

    dropdownEl.append(item);

    item.on('click', function () {
      var title = $('#cmp-uuid-' + data.post_uuid).find('.title').val() || 'Newsletter Title';
      var body = $('#cmp-uuid-' + data.post_uuid).find('.preview').html() || 'Newsletter Body';

      // Append origin to uploaded images/files.
      var port = window.location.port ? ':' + window.location.port : '';
      var origin = window.location.protocol + '//' + window.location.hostname + port;

      body = body.replace(new RegExp('(href="' + config.relative_path + ')(/)', 'gi'), '$1' + origin + '$2');
      body = body.replace(new RegExp('(src="' + config.relative_path + ')(/)', 'gi'), '$1' + origin + '$2');

      bootbox.dialog({
        title: title,
        message: body + '<hr>' + groupsHtml,
        size: 'large',
        buttons: {
          send: {
            label: "Send Newsletter",
            className: "btn-success",
            callback: function callback() {
              socket.emit('admin.Newsletter.send', {
                subject: title,
                template: body,
                group: $('#newsletter-group').val()
              }, function (success) {
                if (success) {
                  app.alert({
                    type: 'success',
                    alert_id: 'newsletter-send',
                    title: 'Newsletter Sent',
                    timeout: 5000
                  });
                } else {
                  app.alert({
                    type: 'error',
                    alert_id: 'newsletter-send',
                    title: 'Error',
                    timeout: 5000
                  });
                }
              });
            }
          },
          cancel: {
            label: "Cancel",
            className: "btn-default",
            callback: function callback() {}
          }
        }
      });
    });
  });
});